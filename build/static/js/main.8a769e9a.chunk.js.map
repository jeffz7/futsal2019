{"version":3,"sources":["components/NavBar.js","components/Schedule.js","components/PointTable.js","components/TopPlayers.js","pages/HomePage.js","components/Results.js","pages/ResultsPage.js","pages/PointsPage.js","pages/SchedulePage.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","src","alt","react_router_dom","to","Schedule","_useState","useState","games","teams","_useState2","Object","slicedToArray","state","setState","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","resultTeams","bodyTeams","teamsArray","resultGames","bodyGames","wrap","_context","prev","next","fetch","sent","json","data","TeamA","TeamB","length","forEach","team","id","stop","apply","this","arguments","fetchData","team1Name","team2Name","team1Image","team2Image","Fragment","map","game","status","team1Id","team2Id","name","image","key","game_day","type","width","height","date","time","PointTable","points","setPoints","colSpan","row","i","played","win","loss","gd","TopPlayers","result","body","code","goal_scored","goal_assisted","HomePage","components_Schedule","components_PointTable","components_TopPlayers","winLabel","winner","Results","reverse","filter","g","stats","x","y","viewBox","enableBackground","cx","cy","r","d","dateTime","ResultsPage","components_Results","PointsPage","SchedulePage","App","components_NavBar","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a769e9a.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst NavBar = () => (\n    <section className=\"section parallax-container breadcrumbs-wrap\">\n        <div className=\"material-parallax parallax\"><img src=\"images/bg-breadcrumbs-1-1920x726.jpg\" alt=\"images/bg-breadcrumbs-1-1920x726.jpg\" /></div>\n        <div className=\"parallax-content breadcrumbs-custom context-dark\">\n            <div className=\"container\">\n                <h3 className=\"breadcrumbs-custom-title\">FUTSAL 2019</h3>\n                <div className=\"row\">\n                    <div className=\"col-xl-1\">\n                        <Link className=\"button button-xs button-gray-outline\" to=\"/\">Home</Link>\n                    </div>\n                    <div className=\"col-xl-1\">\n                        <Link className=\"button button-xs button-gray-outline\" to=\"/results\">Results</Link>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </section>\n)\n\nexport default NavBar","import React, { useState, useEffect } from 'react'\n\nconst Schedule = () => {\n\n    const [\n        state,\n        setState\n    ] = useState({ games: [], teams: {} })\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const resultTeams = await fetch('/api/teams')\n            const bodyTeams = await resultTeams.json()\n\n            const teamsArray = bodyTeams.data\n            let teams = { TeamA: \"TeamA\", TeamB: \"TeamB\" }\n            if (teamsArray && teamsArray.length > 0) {\n                teamsArray.forEach(team => {\n                    teams[team.id] = team\n                })\n            }\n            const resultGames = await fetch('/api/games')\n            const bodyGames = await resultGames.json()\n            setState({ games: bodyGames.data, teams: teams })\n        }\n        fetchData()\n\n    }, [])\n\n    let team1Name = \"TeamA\"\n    let team2Name = \"TeamB\"\n    let team1Image = \"https://images.onefootball.com/icons/leagueColoredCompetition/128/10.png\"\n    let team2Image = \"https://images.onefootball.com/icons/leagueColoredCompetition/128/10.png\"\n\n    return (\n        <>\n\n            <article className=\"heading-component\">\n                <div className=\"heading-component-inner\">\n                    <h5 className=\"heading-component-title\">Game schedule</h5>\n                </div>\n            </article>\n\n            {state.games.map(game => {\n                if (game.status === \"played\") {\n                    return null\n                }\n\n                let team1Id = game.teams[0] || \"TeamA\"\n                let team2Id = game.teams[1] || \"TeamB\"\n\n                if (team1Id) {\n                    team1Name = state.teams[team1Id].name\n                    team1Image = state.teams[team1Id].image\n                }\n                if (team2Id) {\n                    team2Name = state.teams[team2Id].name\n                    team2Image = state.teams[team2Id].image\n                }\n\n                return (\n                    <article className=\"game-result\" key={game.id}>\n                        <div className=\"game-info\">\n                            <p className=\"game-info-subtitle\">DAY {game.game_day}</p>\n                            <h3 className=\"game-info-title\"> {game.type} </h3>\n                            <div className=\"game-info-main\">\n                                <div className=\"game-info-team game-info-team-first\">\n                                    <figure><img src={team1Image} alt=\"\" width=\"75\" height=\"99\" />\n                                    </figure>\n                                    <div className=\"game-result-team-name\">{team1Name}</div>\n                                    <div className=\"game-result-team-country\">Suyati</div>\n                                </div>\n                                <div className=\"game-info-middle game-info-middle-vertical\">\n                                    <time className=\"time-big\" ><span className=\"heading-3\">{game.date}</span>\n                                        AUG 2019\n                                                    </time>\n                                    <div className=\"game-result-divider-wrap\"><span className=\"game-info-team-divider\">VS</span></div>\n                                    <div className=\"group-sm\">\n\n                                        <time> {game.time}</time>\n\n                                    </div>\n                                </div>\n                                <div className=\"game-info-team game-info-team-second\">\n                                    <figure><img src={team2Image} alt=\"\" width=\"78\" height=\"98\" />\n                                    </figure>\n                                    <div className=\"game-result-team-name\">{team2Name}</div>\n                                    <div className=\"game-result-team-country\">Suyati</div>\n                                </div>\n                            </div>\n                        </div>\n                    </article>\n                )\n            }\n            )}\n        </>\n    )\n}\n\nexport default Schedule","import React, { useState, useEffect } from 'react'\n\nconst PointTable = () => {\n    const [points, setPoints] = useState([])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const resultTeams = await fetch('/api/teams/top')\n            const bodyTeams = await resultTeams.json()\n            setPoints(bodyTeams.data)\n        }\n        fetchData()\n\n    }, [])\n\n    return (\n        <div className=\"table-custom-responsive\">\n            <table className=\"table-custom table-standings table-classic\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"2\">Team Position</th>\n                        <th>P</th>\n                        <th>W</th>\n                        <th>L</th>\n                        <th>GD</th>\n                        <th>PTS</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {points.map((row, i) => {\n                        return (\n                            <tr key={i}>\n                                <td><span>{i + 1}</span></td>\n                                <td className=\"team-inline\">\n                                    <div className=\"team-figure\"><img src={row.image} alt={row.name}\n                                        width=\"31\" height=\"41\" />\n                                    </div>\n                                    <div className=\"team-title\">\n                                        <div className=\"team-name\">{row.name}</div>\n                                    </div>\n                                </td>\n                                <td>{row.played}</td>\n                                <td>{row.win}</td>\n                                <td>{row.loss}</td>\n                                <td>{row.gd}</td>\n                                <td>{row.points}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default PointTable","import React, { useState, useEffect } from 'react'\n\nconst TopPlayers = () => {\n\n    const [points, setPoints] = useState([])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch('/api/players/top')\n            const body = await result.json()\n            if(body.code === 200){\n                setPoints(body.data)\n            }\n        }\n        fetchData()\n\n    }, [])\n\n    return (\n        <div className=\"table-custom-responsive\">\n            <table className=\"table-custom table-standings table-classNameic\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"2\">Top Players</th>\n                        <th>GOALS</th>\n                        <th>ASSISTS</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {points.map((row, key) => {\n                        return (\n                            <tr key={key}>\n                                <td><span>{key + 1}</span></td>\n                                <td className=\"team-inline\">\n                                    <div className=\"team-figure\"><img src={row.image} alt={row.name}\n                                        width=\"31\" height=\"41\" />\n                                    </div>\n                                    <div className=\"team-title\">\n                                        <div className=\"team-name\">{row.name}</div>\n                                        <div className=\"team-country\"></div>\n                                    </div>\n                                </td>\n                                <td>{row.goal_scored}</td>\n                                <td>{row.goal_assisted}</td>\n                            </tr>\n                        )\n                    })}\n\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TopPlayers\n","import React from 'react'\nimport Schedule from '../components/Schedule'\nimport PointTable from '../components/PointTable'\nimport TopPlayers from '../components/TopPlayers'\n\n\n\nconst HomePage = () => (\n    <>\n        <div className=\"col-xl-8\">\n            <Schedule />\n        </div>\n        <div className=\"col-xl-4\">\n            <article className=\"heading-component\">\n                <div className=\"heading-component-inner\">\n                    <h5 className=\"heading-component-title\">Standings</h5>\n                </div>\n            </article>\n            <PointTable />\n            <TopPlayers />\n        </div>\n    </>\n)\n\n\nexport default HomePage","import React, { useState, useEffect } from 'react'\n\nconst Results = () => {\n\n    const [\n        state,\n        setState\n    ] = useState({ games: [], teams: {} })\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const resultTeams = await fetch('/api/teams')\n            const bodyTeams = await resultTeams.json()\n\n            const teamsArray = bodyTeams.data\n            let teams = { TeamA: \"TeamA\", TeamB: \"TeamB\" }\n            if (teamsArray && teamsArray.length > 0) {\n                teamsArray.forEach(team => {\n                    teams[team.id] = team\n                })\n            }\n            const resultGames = await fetch('/api/games')\n            const bodyGames = await resultGames.json()\n            let games = bodyGames.data.reverse().filter(g => g.status === \"played\")\n            setState({ games: games, teams: teams })\n        }\n        fetchData()\n\n    }, [])\n\n    let team1Name = \"TeamA\"\n    let team2Name = \"TeamB\"\n    let team1Image = \"https://images.onefootball.com/icons/leagueColoredCompetition/128/10.png\"\n    let team2Image = \"https://images.onefootball.com/icons/leagueColoredCompetition/128/10.png\"\n\n    return (\n        <>\n            <article className=\"heading-component\">\n                <div className=\"heading-component-inner\">\n                    <h5 className=\"heading-component-title\">Latest games results\n                          </h5>\n\n                </div>\n            </article>\n            <div className=\"row row-30\">\n                {state.games.map((row, i) => {\n\n                    let team1Id = row.teams[0] || \"TeamA\"\n                    let team2Id = row.teams[1] || \"TeamB\"\n\n                    if (team1Id) {\n                        team1Name = state.teams[team1Id].name\n                        team1Image = state.teams[team1Id].image\n                    }\n                    if (team2Id) {\n                        team2Name = state.teams[team2Id].name\n                        team2Image = state.teams[team2Id].image\n                    }\n\n                    return <div className=\"col-md-6\" key={i}>\n                        <article className=\"game-result game-result-classic\">\n                            <div className=\"game-result-main\">\n                                <div className=\"game-result-team game-result-team-first\">\n                                    <figure className=\"game-result-team-figure game-result-team-figure-big\">\n                                        <img src={team1Image} alt=\"\" width=\"41\" height=\"55\" />\n                                    </figure>\n                                    <div className=\"game-result-team-name\">{team1Name}</div>\n                                    <div className=\"game-result-team-country\">Suyati</div>\n                                </div>\n                                <div className=\"game-result-middle\">\n                                    <div className=\"game-result-score-wrap\">\n                                        {winLabel(row.winner, row.teams[0], row.stats.result)}\n                                        <div className=\"game-result-score-divider\">\n                                            <svg x=\"0px\" y=\"0px\" width=\"7px\" height=\"21px\" viewBox=\"0 0 7 21\" enableBackground=\"new 0 0 7 21\" >\n                                                <g>\n                                                    <circle cx=\"3.5\" cy=\"3.5\" r=\"3\"></circle>\n                                                    <path d=\"M3.5,1C4.879,1,6,2.122,6,3.5S4.879,6,3.5,6S1,4.878,1,3.5S2.122,1,3.5,1 M3.5,0C1.567,0,0,1.567,0,3.5S1.567,7,3.5,7      S7,5.433,7,3.5S5.433,0,3.5,0L3.5,0z\"></path>\n                                                </g>\n                                                <g>\n                                                    <circle cx=\"3.695\" cy=\"17.5\" r=\"3\"></circle>\n                                                    <path d=\"M3.695,15c1.378,0,2.5,1.122,2.5,2.5S5.073,20,3.695,20s-2.5-1.122-2.5-2.5S2.316,15,3.695,15 M3.695,14      c-1.933,0-3.5,1.567-3.5,3.5s1.567,3.5,3.5,3.5s3.5-1.567,3.5-3.5S5.628,14,3.695,14L3.695,14z\"></path>\n                                                </g>\n                                            </svg>\n                                        </div>\n                                        {winLabel(row.winner, row.teams[1], row.stats.result)}\n                                    </div>\n                                    <div className=\"game-results-status\">{/** home/away */}</div>\n                                </div>\n                                <div className=\"game-result-team game-result-team-second\">\n                                    <figure className=\"game-result-team-figure game-result-team-figure-big\">\n                                        <img src={team2Image} alt=\"\" width=\"50\" height=\"50\" />\n                                    </figure>\n                                    <div className=\"game-result-team-name\">{team2Name}</div>\n                                    <div className=\"game-result-team-country\">Suyati</div>\n                                </div>\n                            </div>\n                            <div className=\"game-result-footer\">\n                                <ul className=\"game-result-details\">\n                                    <li>United Sports Center </li>\n                                    <li>\n                                        <time dateTime=\"2019-04-14\"> {row.date + \" Aug 2019\"}</time>\n                                    </li>\n                                </ul>\n                            </div>\n                        </article>\n                    </div>\n                })}\n            </div>\n        </>\n    )\n}\n\nconst winLabel = (winner, team, result) => {\n    if (winner === team) {\n        return <div className=\"game-result-score game-result-team-win\"> {result[team]}\n            <span className=\"game-result-team-label game-result-team-label-top\">Win</span>\n        </div>\n    }\n    return <div className=\"game-result-score\">{result[team]}</div>\n}\n\nexport default Results","import React from 'react'\nimport Results from '../components/Results'\nimport PointTable from '../components/PointTable'\nimport TopPlayers from '../components/TopPlayers'\n\n\n\nconst ResultsPage = () => (\n    <>\n        <div className=\"col-xl-8\">\n            <Results />\n        </div>\n        <div className=\"col-xl-4\">\n            <article className=\"heading-component\">\n                <div className=\"heading-component-inner\">\n                    <h5 className=\"heading-component-title\">Standings</h5>\n                </div>\n            </article>\n            <PointTable />\n            <TopPlayers />\n        </div>\n    </>\n)\n\n\nexport default ResultsPage","import React from 'react'\n\nconst PointsPage = () => (\n    <>\n    PointsPage\n    </>\n)\n\nexport default PointsPage","import React from 'react'\n\nconst SchedulePage = () => {\n    return (\n        <h1>\n        SchedulePage\n        </h1>\n    )\n}\n\nexport default SchedulePage ","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport HomePage from './pages/HomePage'\nimport ResultsPage from './pages/ResultsPage'\nimport PointsPage from './pages/PointsPage'\nimport SchedulePage from './pages/SchedulePage'\n\nfunction App () {\n  return (\n    <Router>\n      <NavBar />\n      <section className=\"section section-sm bg-gray-100\">\n        <div className=\"container\">\n          <div className=\"row row-50\">\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/tables\" component={PointsPage} />\n            <Route path=\"/schedules\" component={SchedulePage} />\n            <Route path=\"/results\" component={ResultsPage} />\n          </div>\n        </div>\n      </section>\n\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'whatwg-fetch'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}