{"version":3,"sources":["components/NavBar.js","components/Schedule.js","components/PointTable.js","components/TopPlayers.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","style","backgroundColor","paddingTop","paddingBottom","Schedule","_useState","useState","games","teams","_useState2","Object","slicedToArray","state","setState","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","resultTeams","bodyTeams","teamsArray","resultGames","bodyGames","wrap","_context","prev","next","fetch","sent","json","data","TeamA","TeamB","length","forEach","team","id","stop","apply","this","arguments","fetchData","team1Name","team2Name","team1Image","team2Image","Fragment","map","game","team1Id","team2Id","name","image","type","key","src","alt","status","stats","result","date_time","time","gameStats","goals","goalScorers","sort","b","parseInt","g","own_goal","text","concat","scored_by","fontSize","join","showGoals","PointTable","points","setPoints","colSpan","row","i","width","height","played","win","loss","TopPlayers","body","code","hidden","goal_scored","goal_assisted","pts","HomePage","components_Schedule","components_PointTable","components_TopPlayers","App","react_router_dom","components_NavBar","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ab00354.chunk.js","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\n\nconst NavBar = () => (\n    <section className=\"section parallax-container breadcrumbs-wrap\" style={{backgroundColor:\"rgb(53, 173, 121)\"}}>\n        {/* <div className=\"material-parallax parallax\"><img src={window.location.origin + '/images/banner-SFL19.png'} /></div> */}\n        <div className=\"parallax-content breadcrumbs-custom context-dark\" style={{paddingTop: 50, paddingBottom:50}}>\n            <div className=\"container\">\n                <h3 className=\"breadcrumbs-custom-title font-weight-bold\">SUYATI FUTSAL 2019</h3>\n                {/* <div className=\"row\">\n                    <div className=\"col-xl-1\">\n                        <Link className=\"button button-xs button-gray-outline\" to=\"/\">Home</Link>\n                    </div>\n                    <div className=\"col-xl-1\">\n                        <Link className=\"button button-xs button-gray-outline\" to=\"/results\">Results</Link>\n                    </div>\n                </div> */}\n\n            </div>\n        </div>\n    </section>\n)\n\nexport default NavBar","import React, { useState, useEffect } from 'react'\n\nconst Schedule = () => {\n\n    const [\n        state,\n        setState\n    ] = useState({ games: [], teams: {} })\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const resultTeams = await fetch('/api/teams')\n            const bodyTeams = await resultTeams.json()\n\n            const teamsArray = bodyTeams.data\n            let teams = { TeamA: \"TeamA\", TeamB: \"TeamB\" }\n            if (teamsArray && teamsArray.length > 0) {\n                teamsArray.forEach(team => {\n                    teams[team.id] = team\n                })\n            }\n            const resultGames = await fetch('/api/games')\n            const bodyGames = await resultGames.json()\n            setState({ games: bodyGames.data, teams: teams })\n        }\n        fetchData()\n\n    }, [])\n\n    let team1Name = \"TeamA\"\n    let team2Name = \"TeamB\"\n    let team1Image = \"https://images.onefootball.com/icons/leagueColoredCompetition/128/10.png\"\n    let team2Image = \"https://images.onefootball.com/icons/leagueColoredCompetition/128/10.png\"\n\n    return (\n        <>\n\n            <article className=\"heading-component\">\n                <div className=\"heading-component-inner\">\n                    <h5 className=\"heading-component-title\">Matches</h5>\n                </div>\n            </article>\n\n            {state.games.map(game => {\n\n                let team1Id = game.teams[0] || \"TeamA\"\n                let team2Id = game.teams[1] || \"TeamB\"\n\n                if (team1Id) {\n                    team1Name = state.teams[team1Id].name\n                    team1Image = state.teams[team1Id].image\n                }\n                if (team2Id) {\n                    team2Name = state.teams[team2Id].name\n                    team2Image = state.teams[team2Id].image\n                }\n\n                if (game.teams.length === 0) {\n                    team1Image = \"https://futsal-2019.s3.us-east-2.amazonaws.com/default_team.png\"\n                    team2Image = \"https://futsal-2019.s3.us-east-2.amazonaws.com/default_team.png\"\n                    if (game.type === \"Eliminator\") {\n                        team1Name = \"League Table 2nd\"\n                        team2Name = \"League Table 3rd\"\n                    }\n                    if (game.type === \"Final\") {\n                        team1Name = \"League Table 1st\"\n                        team2Name = \"Winner of Eliminator\"\n                    }\n                }\n\n                return (\n                    <article className=\"game-result game-result-override-box\" key={game.id}>\n                        <div className=\"game-info\">\n                            <p className=\"game-info-subtitle\">{game.type === \"Group Stage\" ? '' : game.type}</p>\n                            {/* <h3 className=\"game-info-title\"> {game.type} </h3> */}\n                            <div className=\"game-info-main\">\n                                <div className=\"game-info-team game-info-team-first\">\n                                    <figure className=\"d-flex align-items-center\"><img src={team1Image} alt=\"\" />\n                                    </figure>\n                                    <div className=\"game-result-team-name\">{team1Name}</div>\n                                    {/* <div className=\"game-result-team-country\">Suyati</div> */}\n                                </div>\n                                {gameStats(game)}\n                                <div className=\"game-info-team game-info-team-second\">\n                                    <figure className=\"d-flex align-items-center\"><img src={team2Image} alt=\"\" />\n                                    </figure>\n                                    <div className=\"game-result-team-name\">{team2Name}</div>\n                                    {/* <div className=\"game-result-team-country\">Suyati</div> */}\n                                </div>\n                            </div>\n                            {showGoals(game.stats)}\n                        </div>\n                    </article>\n                )\n            }\n            )}\n        </>\n    )\n}\n\nfunction gameStats (game) {\n    if (game.status === \"played\") {\n        return (\n            <div className=\"game-info-middle game-info-middle-vertical\">\n                <time className=\"time-big\" ><span className=\"heading-3\">{game.stats.result[game.teams[0]]} : {game.stats.result[game.teams[1]]}</span>\n                </time>\n                <div className=\"group-sm font-weight-lighter text-capitalize\">\n                    <time>{game.date_time[0] + \", \" + game.date_time[1] + \" \" + game.date_time[2] + \" \" + game.date_time[3]}</time>\n\n                </div>\n            </div>)\n    }\n    return (\n        <div className=\"game-info-middle game-info-middle-vertical\">\n            <time className=\"time-big\" ><span className=\"heading-3\">{game.date_time[0] + \", \" + game.date_time[1]}</span>\n                {game.date_time[2] + \" \" + game.date_time[3]}\n            </time>\n            <div className=\"game-result-divider-wrap\"><span className=\"game-info-team-divider\">VS</span></div>\n            <div className=\"group-sm\">\n\n                <time> {game.time}</time>\n\n            </div>\n        </div>)\n}\n\nfunction showGoals (stats) {\n\n    let goals = stats && stats.goals\n    if (goals) {\n        goals = goals.sort((a, b) => parseInt(a.time) - parseInt(b.time))\n\n        let goalScorers = goals.map(g => {\n            let own_goal = ''\n            if (g.own_goal) {\n                own_goal = ', Own Goal'\n            }\n            let text = `${g.scored_by.name} (${g.time}'${own_goal})`\n            return text\n        })\n\n        return (<div className=\"font-weight-lighter text-capitalize\" style={{ fontSize: \"smaller  \" }}>\n            {goalScorers.join(', ')}\n\n        </div>)\n    }\n    return null\n}\n\nexport default Schedule","import React, { useState, useEffect } from 'react'\n\nconst PointTable = () => {\n    const [points, setPoints] = useState([])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const resultTeams = await fetch('/api/teams/top')\n            const bodyTeams = await resultTeams.json()\n            setPoints(bodyTeams.data)\n        }\n        fetchData()\n\n    }, [])\n\n    return (\n        <div className=\"table-custom-responsive\">\n            <table className=\"table-custom table-standings table-classic\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"2\">Team Position</th>\n                        <th>P</th>\n                        <th>W</th>\n                        <th>L</th>\n                        {/* <th>GD</th> */}\n                        <th>PTS</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {points.map((row, i) => {\n                        return (\n                            <tr key={i}>\n                                <td><span>{i + 1}</span></td>\n                                <td className=\"team-inline\">\n                                    <div className=\"team-figure\"><img src={row.image} alt={row.name}\n                                        width=\"31\" height=\"41\" />\n                                    </div>\n                                    <div className=\"team-title\">\n                                        <div className=\"team-name\">{row.name}</div>\n                                    </div>\n                                </td>\n                                <td>{row.played}</td>\n                                <td>{row.win}</td>\n                                <td>{row.loss}</td>\n                                {/* <td>{row.gd}</td> */}\n                                <td>{row.points}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default PointTable","import React, { useState, useEffect } from 'react'\n\nconst TopPlayers = () => {\n\n    const [points, setPoints] = useState([])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch('/api/players/top')\n            const body = await result.json()\n            if(body.code === 200){\n                setPoints(body.data)\n            }\n        }\n        fetchData()\n\n    }, [])\n\n    return (\n        <div className=\"table-custom-responsive\" hidden={points.length===0}>\n            <table className=\"table-custom table-standings table-classNameic\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"2\">Top Players</th>\n                        <th>G</th>\n                        <th>A</th>\n                        <th>PTS</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {points.map((row, key) => {\n                        return (\n                            <tr key={key}>\n                                <td><span>{key + 1}</span></td>\n                                <td className=\"team-inline\">\n                                    <div className=\"team-figure\"><img src={row.image} alt={row.name}\n                                        width=\"31\" height=\"41\" />\n                                    </div>\n                                    <div className=\"team-title\">\n                                        <div className=\"team-name\">{row.name}</div>\n                                        <div className=\"team-country\"></div>\n                                    </div>\n                                </td>\n                                <td>{row.goal_scored}</td>\n                                <td>{row.goal_assisted}</td>\n                                <td>{row.pts}</td>\n                            </tr>\n                        )\n                    })}\n\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TopPlayers\n","import React from 'react'\nimport Schedule from '../components/Schedule'\nimport PointTable from '../components/PointTable'\nimport TopPlayers from '../components/TopPlayers'\n\n\n\nconst HomePage = () => (\n    <>\n        <div className=\"col-xl-8\">\n            <Schedule />\n        </div>\n        <div className=\"col-xl-4\">\n            <article className=\"heading-component\">\n                <div className=\"heading-component-inner\">\n                    <h5 className=\"heading-component-title\">Standings</h5>\n                </div>\n            </article>\n            <PointTable />\n            <TopPlayers />\n        </div>\n    </>\n)\n\n\nexport default HomePage","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport HomePage from './pages/HomePage'\nimport ResultsPage from './pages/ResultsPage'\n\nfunction App () {\n  return (\n    <Router>\n      <NavBar />\n      <section className=\"section section-sm\">\n        <div className=\"container\">\n          <div className=\"row row-50\">\n            <Route path=\"/\" component={HomePage} exact />\n            {/* <Route path=\"/results\" component={ResultsPage} />  */}\n          </div>\n        </div>\n      </section>\n\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'whatwg-fetch'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}